/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  WithdrawContractTest,
  WithdrawContractTestInterface,
} from "../../../../contracts/test/WithdrawContractTest.sol/WithdrawContractTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_paktManagerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "withdrawFromPaktManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161020538038061020583398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506100ff565b60008151905061007e816100e8565b92915050565b60006020828403121561009a576100996100e3565b5b60006100a88482850161006f565b91505092915050565b60006100bc826100c3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100f1816100b1565b81146100fc57600080fd5b50565b60805160601c60eb61011a60003960006037015260eb6000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638144dd3d14602d575b600080fd5b60336035565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015609c57600080fd5b505af115801560af573d6000803e3d6000fd5b5050505056fea2646970667358221220f7b88f7794b3de38266d2363d729a259a59f101a3fc0d8d37550b785f03aed4964736f6c63430008070033";

type WithdrawContractTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawContractTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawContractTest__factory extends ContractFactory {
  constructor(...args: WithdrawContractTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _paktManagerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawContractTest> {
    return super.deploy(
      _paktManagerAddress,
      overrides || {}
    ) as Promise<WithdrawContractTest>;
  }
  override getDeployTransaction(
    _paktManagerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_paktManagerAddress, overrides || {});
  }
  override attach(address: string): WithdrawContractTest {
    return super.attach(address) as WithdrawContractTest;
  }
  override connect(signer: Signer): WithdrawContractTest__factory {
    return super.connect(signer) as WithdrawContractTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawContractTestInterface {
    return new utils.Interface(_abi) as WithdrawContractTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawContractTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WithdrawContractTest;
  }
}
